/**
 * NASCAR.Data.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NascarDataClient);
  }
}(this, function(expect, NascarDataClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NascarDataClient.RaceApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RaceApi', function() {
    describe('raceCautionsGet', function() {
      it('should call raceCautionsGet successfully', function(done) {
        //uncomment below and update the code to test raceCautionsGet
        //instance.raceCautionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('raceDisciplineUpdatesGet', function() {
      it('should call raceDisciplineUpdatesGet successfully', function(done) {
        //uncomment below and update the code to test raceDisciplineUpdatesGet
        //instance.raceDisciplineUpdatesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('raceEntriesGet', function() {
      it('should call raceEntriesGet successfully', function(done) {
        //uncomment below and update the code to test raceEntriesGet
        //instance.raceEntriesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('raceGet', function() {
      it('should call raceGet successfully', function(done) {
        //uncomment below and update the code to test raceGet
        //instance.raceGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('raceInfractionsGet', function() {
      it('should call raceInfractionsGet successfully', function(done) {
        //uncomment below and update the code to test raceInfractionsGet
        //instance.raceInfractionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('raceLapLeadersGet', function() {
      it('should call raceLapLeadersGet successfully', function(done) {
        //uncomment below and update the code to test raceLapLeadersGet
        //instance.raceLapLeadersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('raceLoopStatsGet', function() {
      it('should call raceLoopStatsGet successfully', function(done) {
        //uncomment below and update the code to test raceLoopStatsGet
        //instance.raceLoopStatsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('racePitstopsGet', function() {
      it('should call racePitstopsGet successfully', function(done) {
        //uncomment below and update the code to test racePitstopsGet
        //instance.racePitstopsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('racePracticeResultsGet', function() {
      it('should call racePracticeResultsGet successfully', function(done) {
        //uncomment below and update the code to test racePracticeResultsGet
        //instance.racePracticeResultsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('raceQualifyingResultsGet', function() {
      it('should call raceQualifyingResultsGet successfully', function(done) {
        //uncomment below and update the code to test raceQualifyingResultsGet
        //instance.raceQualifyingResultsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('raceRaceResultsGet', function() {
      it('should call raceRaceResultsGet successfully', function(done) {
        //uncomment below and update the code to test raceRaceResultsGet
        //instance.raceRaceResultsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('raceRostersGet', function() {
      it('should call raceRostersGet successfully', function(done) {
        //uncomment below and update the code to test raceRostersGet
        //instance.raceRostersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('raceSeasonGet', function() {
      it('should call raceSeasonGet successfully', function(done) {
        //uncomment below and update the code to test raceSeasonGet
        //instance.raceSeasonGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('raceStageResultsGet', function() {
      it('should call raceStageResultsGet successfully', function(done) {
        //uncomment below and update the code to test raceStageResultsGet
        //instance.raceStageResultsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('raceViewmodelGet', function() {
      it('should call raceViewmodelGet successfully', function(done) {
        //uncomment below and update the code to test raceViewmodelGet
        //instance.raceViewmodelGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('raceWeekendScheduleGet', function() {
      it('should call raceWeekendScheduleGet successfully', function(done) {
        //uncomment below and update the code to test raceWeekendScheduleGet
        //instance.raceWeekendScheduleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
