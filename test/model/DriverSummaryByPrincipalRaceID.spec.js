/**
 * NASCAR.Data.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NascarDataClient);
  }
}(this, function(expect, NascarDataClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NascarDataClient.DriverSummaryByPrincipalRaceID();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DriverSummaryByPrincipalRaceID', function() {
    it('should create an instance of DriverSummaryByPrincipalRaceID', function() {
      // uncomment below and update the code to test DriverSummaryByPrincipalRaceID
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be.a(NascarDataClient.DriverSummaryByPrincipalRaceID);
    });

    it('should have the property averageStart (base name: "average_start")', function() {
      // uncomment below and update the code to test the property averageStart
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property averageFinish (base name: "average_finish")', function() {
      // uncomment below and update the code to test the property averageFinish
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property dnf (base name: "dnf")', function() {
      // uncomment below and update the code to test the property dnf
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property driverId (base name: "driver_id")', function() {
      // uncomment below and update the code to test the property driverId
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property lapsCompleted (base name: "laps_completed")', function() {
      // uncomment below and update the code to test the property lapsCompleted
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property lapsLed (base name: "laps_led")', function() {
      // uncomment below and update the code to test the property lapsLed
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property leadLapFinish (base name: "lead_lap_finish")', function() {
      // uncomment below and update the code to test the property leadLapFinish
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property milesCompleted (base name: "miles_completed")', function() {
      // uncomment below and update the code to test the property milesCompleted
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property poles (base name: "poles")', function() {
      // uncomment below and update the code to test the property poles
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property runningAtFinish (base name: "running_at_finish")', function() {
      // uncomment below and update the code to test the property runningAtFinish
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property seriesId (base name: "series_id")', function() {
      // uncomment below and update the code to test the property seriesId
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property top5 (base name: "top5")', function() {
      // uncomment below and update the code to test the property top5
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property top10 (base name: "top10")', function() {
      // uncomment below and update the code to test the property top10
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property totalRaces (base name: "total_races")', function() {
      // uncomment below and update the code to test the property totalRaces
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property wins (base name: "wins")', function() {
      // uncomment below and update the code to test the property wins
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property principalRaceId (base name: "principal_race_id")', function() {
      // uncomment below and update the code to test the property principalRaceId
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property raceName (base name: "race_name")', function() {
      // uncomment below and update the code to test the property raceName
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property raceDate (base name: "race_date")', function() {
      // uncomment below and update the code to test the property raceDate
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

    it('should have the property season (base name: "season")', function() {
      // uncomment below and update the code to test the property season
      //var instane = new NascarDataClient.DriverSummaryByPrincipalRaceID();
      //expect(instance).to.be();
    });

  });

}));
