/**
 * NASCAR.Data.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NascarDataClient);
  }
}(this, function(expect, NascarDataClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NascarDataClient.OwnerPoint();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OwnerPoint', function() {
    it('should create an instance of OwnerPoint', function() {
      // uncomment below and update the code to test OwnerPoint
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be.a(NascarDataClient.OwnerPoint);
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property vehicleNumber (base name: "vehicle_number")', function() {
      // uncomment below and update the code to test the property vehicleNumber
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property position (base name: "position")', function() {
      // uncomment below and update the code to test the property position
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property points (base name: "points")', function() {
      // uncomment below and update the code to test the property points
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property playoffPoints (base name: "playoff_points")', function() {
      // uncomment below and update the code to test the property playoffPoints
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property playoffRank (base name: "playoff_rank")', function() {
      // uncomment below and update the code to test the property playoffRank
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property deltaLeader (base name: "delta_leader")', function() {
      // uncomment below and update the code to test the property deltaLeader
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property deltaNext (base name: "delta_next")', function() {
      // uncomment below and update the code to test the property deltaNext
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property starts (base name: "starts")', function() {
      // uncomment below and update the code to test the property starts
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property poles (base name: "poles")', function() {
      // uncomment below and update the code to test the property poles
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property wins (base name: "wins")', function() {
      // uncomment below and update the code to test the property wins
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property stage1Wins (base name: "stage_1_wins")', function() {
      // uncomment below and update the code to test the property stage1Wins
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property stage2Wins (base name: "stage_2_wins")', function() {
      // uncomment below and update the code to test the property stage2Wins
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property stage3Wins (base name: "stage_3_wins")', function() {
      // uncomment below and update the code to test the property stage3Wins
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property stagePoints (base name: "stage_points")', function() {
      // uncomment below and update the code to test the property stagePoints
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property playoffRaceWins (base name: "playoff_race_wins")', function() {
      // uncomment below and update the code to test the property playoffRaceWins
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property playoffStageWins (base name: "playoff_stage_wins")', function() {
      // uncomment below and update the code to test the property playoffStageWins
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property pointsEarnedThisRace (base name: "points_earned_this_race")', function() {
      // uncomment below and update the code to test the property pointsEarnedThisRace
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property playoffPointsEarnedThisRace (base name: "playoff_points_earned_this_race")', function() {
      // uncomment below and update the code to test the property playoffPointsEarnedThisRace
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property stagePointsEarnedThisRace (base name: "stage_points_earned_this_race")', function() {
      // uncomment below and update the code to test the property stagePointsEarnedThisRace
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property top5 (base name: "top5")', function() {
      // uncomment below and update the code to test the property top5
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property top10 (base name: "top10")', function() {
      // uncomment below and update the code to test the property top10
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property lapsLed (base name: "laps_led")', function() {
      // uncomment below and update the code to test the property lapsLed
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property dnf (base name: "dnf")', function() {
      // uncomment below and update the code to test the property dnf
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property madePlayoffs (base name: "made_playoffs")', function() {
      // uncomment below and update the code to test the property madePlayoffs
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property inPlayoffs (base name: "in_playoffs")', function() {
      // uncomment below and update the code to test the property inPlayoffs
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

    it('should have the property highestRound (base name: "highest_round")', function() {
      // uncomment below and update the code to test the property highestRound
      //var instane = new NascarDataClient.OwnerPoint();
      //expect(instance).to.be();
    });

  });

}));
