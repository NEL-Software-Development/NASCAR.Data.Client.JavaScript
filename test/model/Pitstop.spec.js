/**
 * NASCAR.Data.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NascarDataClient);
  }
}(this, function(expect, NascarDataClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NascarDataClient.Pitstop();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Pitstop', function() {
    it('should create an instance of Pitstop', function() {
      // uncomment below and update the code to test Pitstop
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be.a(NascarDataClient.Pitstop);
    });

    it('should have the property lap (base name: "lap")', function() {
      // uncomment below and update the code to test the property lap
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property leaderLap (base name: "leader_lap")', function() {
      // uncomment below and update the code to test the property leaderLap
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property vehicleNumber (base name: "vehicle_number")', function() {
      // uncomment below and update the code to test the property vehicleNumber
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property enterFlagstate (base name: "enter_flagstate")', function() {
      // uncomment below and update the code to test the property enterFlagstate
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property enterRacetime (base name: "enter_racetime")', function() {
      // uncomment below and update the code to test the property enterRacetime
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property enterTravelduration (base name: "enter_travelduration")', function() {
      // uncomment below and update the code to test the property enterTravelduration
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property adjustmentLeft (base name: "adjustment_left")', function() {
      // uncomment below and update the code to test the property adjustmentLeft
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property adjustmentRight (base name: "adjustment_right")', function() {
      // uncomment below and update the code to test the property adjustmentRight
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property bodyRepairs (base name: "body_repairs")', function() {
      // uncomment below and update the code to test the property bodyRepairs
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property fuelCans (base name: "fuel_cans")', function() {
      // uncomment below and update the code to test the property fuelCans
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property leftfrontTirechanged (base name: "leftfront_tirechanged")', function() {
      // uncomment below and update the code to test the property leftfrontTirechanged
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property leftrearTirechanged (base name: "Leftrear_tirechanged")', function() {
      // uncomment below and update the code to test the property leftrearTirechanged
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property rightfrontTirechanged (base name: "rightfront_tirechanged")', function() {
      // uncomment below and update the code to test the property rightfrontTirechanged
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property rightrearTirechanged (base name: "rightrear_tirechanged")', function() {
      // uncomment below and update the code to test the property rightrearTirechanged
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property infraction (base name: "infraction")', function() {
      // uncomment below and update the code to test the property infraction
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property video (base name: "video")', function() {
      // uncomment below and update the code to test the property video
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property pitboxEnter (base name: "pitbox_enter")', function() {
      // uncomment below and update the code to test the property pitboxEnter
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property pitboxExit (base name: "pitbox_exit")', function() {
      // uncomment below and update the code to test the property pitboxExit
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property exitFlagstate (base name: "exit_flagstate")', function() {
      // uncomment below and update the code to test the property exitFlagstate
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property exitRacetime (base name: "exit_racetime")', function() {
      // uncomment below and update the code to test the property exitRacetime
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property exitTravelduration (base name: "exit_travelduration")', function() {
      // uncomment below and update the code to test the property exitTravelduration
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

    it('should have the property totalDuration (base name: "total_duration")', function() {
      // uncomment below and update the code to test the property totalDuration
      //var instane = new NascarDataClient.Pitstop();
      //expect(instance).to.be();
    });

  });

}));
