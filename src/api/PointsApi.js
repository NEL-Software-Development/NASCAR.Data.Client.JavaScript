/**
 * NASCAR.Data.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient.js";
import DriverPoint from '../model/DriverPoint.js';
import ManufacturerPoint from '../model/ManufacturerPoint.js';
import OwnerPoint from '../model/OwnerPoint.js';

/**
* Points service.
* @module api/PointsApi
* @version 1.0
*/
export default class PointsApi {

    /**
    * Constructs a new PointsApi. 
    * @alias module:api/PointsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the pointsDriverPointsGet operation.
     * @callback module:api/PointsApi~pointsDriverPointsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DriverPoint>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:api/PointsApi~pointsDriverPointsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DriverPoint>}
     */
    pointsDriverPointsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'season': opts['season'],
        'series_id': opts['seriesId'],
        'race_id': opts['raceId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [DriverPoint];

      return this.apiClient.callApi(
        '/points/driver-points', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the pointsManufacturerPointsGet operation.
     * @callback module:api/PointsApi~pointsManufacturerPointsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ManufacturerPoint>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:api/PointsApi~pointsManufacturerPointsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ManufacturerPoint>}
     */
    pointsManufacturerPointsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'season': opts['season'],
        'series_id': opts['seriesId'],
        'race_id': opts['raceId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [ManufacturerPoint];

      return this.apiClient.callApi(
        '/points/manufacturer-points', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the pointsOwnerPointsGet operation.
     * @callback module:api/PointsApi~pointsOwnerPointsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/OwnerPoint>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:api/PointsApi~pointsOwnerPointsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/OwnerPoint>}
     */
    pointsOwnerPointsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'season': opts['season'],
        'series_id': opts['seriesId'],
        'race_id': opts['raceId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [OwnerPoint];

      return this.apiClient.callApi(
        '/points/owner-points', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
