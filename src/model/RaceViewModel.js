/**
 * NASCAR.Data.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient.js';
import Caution from './Caution.js';
import LapLeader from './LapLeader.js';
import LoopStat from './LoopStat.js';
import Pitstop from './Pitstop.js';
import PracticeRunResults from './PracticeRunResults.js';
import QualifyingRunResults from './QualifyingRunResults.js';
import RaceInfraction from './RaceInfraction.js';
import RaceRunResults from './RaceRunResults.js';
import RunDetails from './RunDetails.js';
import RunEntry from './RunEntry.js';
import StageRunResults from './StageRunResults.js';
import WeekendSchedule from './WeekendSchedule.js';


/**
* The RaceViewModel model module.
* @module model/RaceViewModel
* @version 1.0
*/
export default class RaceViewModel {
    /**
    * Constructs a new <code>RaceViewModel</code>.
    * @alias module:model/RaceViewModel
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>RaceViewModel</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/RaceViewModel} obj Optional instance to populate.
    * @return {module:model/RaceViewModel} The populated <code>RaceViewModel</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RaceViewModel();
                        
            
            if (data.hasOwnProperty('series_id')) {
                obj['series_id'] = ApiClient.convertToType(data['series_id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('promoter')) {
                obj['promoter'] = ApiClient.convertToType(data['promoter'], 'String');
            }
            if (data.hasOwnProperty('laps')) {
                obj['laps'] = ApiClient.convertToType(data['laps'], 'Number');
            }
            if (data.hasOwnProperty('distance')) {
                obj['distance'] = ApiClient.convertToType(data['distance'], 'Number');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('cautions')) {
                obj['cautions'] = ApiClient.convertToType(data['cautions'], [Caution]);
            }
            if (data.hasOwnProperty('entries')) {
                obj['entries'] = ApiClient.convertToType(data['entries'], [RunEntry]);
            }
            if (data.hasOwnProperty('infractions')) {
                obj['infractions'] = ApiClient.convertToType(data['infractions'], [RaceInfraction]);
            }
            if (data.hasOwnProperty('lap_Leaders')) {
                obj['lap_Leaders'] = ApiClient.convertToType(data['lap_Leaders'], [LapLeader]);
            }
            if (data.hasOwnProperty('loop_Stats')) {
                obj['loop_Stats'] = ApiClient.convertToType(data['loop_Stats'], [LoopStat]);
            }
            if (data.hasOwnProperty('pitstops')) {
                obj['pitstops'] = ApiClient.convertToType(data['pitstops'], [Pitstop]);
            }
            if (data.hasOwnProperty('practice_results')) {
                obj['practice_results'] = ApiClient.convertToType(data['practice_results'], [PracticeRunResults]);
            }
            if (data.hasOwnProperty('qualifying_results')) {
                obj['qualifying_results'] = ApiClient.convertToType(data['qualifying_results'], [QualifyingRunResults]);
            }
            if (data.hasOwnProperty('race_results')) {
                obj['race_results'] = ApiClient.convertToType(data['race_results'], [RaceRunResults]);
            }
            if (data.hasOwnProperty('runs')) {
                obj['runs'] = ApiClient.convertToType(data['runs'], [RunDetails]);
            }
            if (data.hasOwnProperty('stage_results')) {
                obj['stage_results'] = ApiClient.convertToType(data['stage_results'], [StageRunResults]);
            }
            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = ApiClient.convertToType(data['schedule'], [WeekendSchedule]);
            }
        }
        return obj;
    }

    /**
    * Series Id
    * @member {Number} series_id
    */
    'series_id' = undefined;
    /**
    * Race name
    * @member {String} name
    */
    'name' = undefined;
    /**
    * Race promoter
    * @member {String} promoter
    */
    'promoter' = undefined;
    /**
    * Laps
    * @member {Number} laps
    */
    'laps' = undefined;
    /**
    * Distance
    * @member {Number} distance
    */
    'distance' = undefined;
    /**
    * Race date
    * @member {Date} date
    */
    'date' = undefined;
    /**
    * Comments
    * @member {String} comments
    */
    'comments' = undefined;
    /**
    * Cautions
    * @member {Array.<module:model/Caution>} cautions
    */
    'cautions' = undefined;
    /**
    * Race entries
    * @member {Array.<module:model/RunEntry>} entries
    */
    'entries' = undefined;
    /**
    * Race infractions
    * @member {Array.<module:model/RaceInfraction>} infractions
    */
    'infractions' = undefined;
    /**
    * Lap leaders
    * @member {Array.<module:model/LapLeader>} lap_Leaders
    */
    'lap_Leaders' = undefined;
    /**
    * Loop stats
    * @member {Array.<module:model/LoopStat>} loop_Stats
    */
    'loop_Stats' = undefined;
    /**
    * Pitstops
    * @member {Array.<module:model/Pitstop>} pitstops
    */
    'pitstops' = undefined;
    /**
    * Practice results
    * @member {Array.<module:model/PracticeRunResults>} practice_results
    */
    'practice_results' = undefined;
    /**
    * Qualifying results
    * @member {Array.<module:model/QualifyingRunResults>} qualifying_results
    */
    'qualifying_results' = undefined;
    /**
    * Race results
    * @member {Array.<module:model/RaceRunResults>} race_results
    */
    'race_results' = undefined;
    /**
    * Runs
    * @member {Array.<module:model/RunDetails>} runs
    */
    'runs' = undefined;
    /**
    * Stage results
    * @member {Array.<module:model/StageRunResults>} stage_results
    */
    'stage_results' = undefined;
    /**
    * Weekend schedule
    * @member {Array.<module:model/WeekendSchedule>} schedule
    */
    'schedule' = undefined;




}
