/**
 * NASCAR.Data.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The RaceResultSummary model module.
* @module model/RaceResultSummary
* @version 1.0
*/
export default class RaceResultSummary {
    /**
    * Constructs a new <code>RaceResultSummary</code>.
    * @alias module:model/RaceResultSummary
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>RaceResultSummary</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/RaceResultSummary} obj Optional instance to populate.
    * @return {module:model/RaceResultSummary} The populated <code>RaceResultSummary</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RaceResultSummary();
                        
            
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('race_name')) {
                obj['race_name'] = ApiClient.convertToType(data['race_name'], 'String');
            }
            if (data.hasOwnProperty('vehicle_number')) {
                obj['vehicle_number'] = ApiClient.convertToType(data['vehicle_number'], 'String');
            }
            if (data.hasOwnProperty('finish_position')) {
                obj['finish_position'] = ApiClient.convertToType(data['finish_position'], 'Number');
            }
            if (data.hasOwnProperty('best_time')) {
                obj['best_time'] = ApiClient.convertToType(data['best_time'], 'Number');
            }
            if (data.hasOwnProperty('best_speed')) {
                obj['best_speed'] = ApiClient.convertToType(data['best_speed'], 'Number');
            }
            if (data.hasOwnProperty('delta_next_time')) {
                obj['delta_next_time'] = ApiClient.convertToType(data['delta_next_time'], 'Number');
            }
            if (data.hasOwnProperty('delta_next_laps')) {
                obj['delta_next_laps'] = ApiClient.convertToType(data['delta_next_laps'], 'Number');
            }
            if (data.hasOwnProperty('delta_leader_time')) {
                obj['delta_leader_time'] = ApiClient.convertToType(data['delta_leader_time'], 'Number');
            }
            if (data.hasOwnProperty('delta_leader_laps')) {
                obj['delta_leader_laps'] = ApiClient.convertToType(data['delta_leader_laps'], 'Number');
            }
            if (data.hasOwnProperty('best_lap')) {
                obj['best_lap'] = ApiClient.convertToType(data['best_lap'], 'Number');
            }
            if (data.hasOwnProperty('laps')) {
                obj['laps'] = ApiClient.convertToType(data['laps'], 'Number');
            }
        }
        return obj;
    }

    /**
    * Race date
    * @member {Date} date
    */
    'date' = undefined;
    /**
    * Race name
    * @member {String} race_name
    */
    'race_name' = undefined;
    /**
    * Vehicle number
    * @member {String} vehicle_number
    */
    'vehicle_number' = undefined;
    /**
    * Finish position
    * @member {Number} finish_position
    */
    'finish_position' = undefined;
    /**
    * Best lap time
    * @member {Number} best_time
    */
    'best_time' = undefined;
    /**
    * Best speed
    * @member {Number} best_speed
    */
    'best_speed' = undefined;
    /**
    * The number of milliseconds behind the next entry
    * @member {Number} delta_next_time
    */
    'delta_next_time' = undefined;
    /**
    * The number of laps behind the next entry
    * @member {Number} delta_next_laps
    */
    'delta_next_laps' = undefined;
    /**
    * The number of milliseconds behind the leader
    * @member {Number} delta_leader_time
    */
    'delta_leader_time' = undefined;
    /**
    * The number of laps behind the leader
    * @member {Number} delta_leader_laps
    */
    'delta_leader_laps' = undefined;
    /**
    * The best lap
    * @member {Number} best_lap
    */
    'best_lap' = undefined;
    /**
    * The number of laps completed
    * @member {Number} laps
    */
    'laps' = undefined;




}
