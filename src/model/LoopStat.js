/**
 * NASCAR.Data.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The LoopStat model module.
* @module model/LoopStat
* @version 1.0
*/
export default class LoopStat {
    /**
    * Constructs a new <code>LoopStat</code>.
    * @alias module:model/LoopStat
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>LoopStat</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/LoopStat} obj Optional instance to populate.
    * @return {module:model/LoopStat} The populated <code>LoopStat</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoopStat();
                        
            
            if (data.hasOwnProperty('starting_position')) {
                obj['starting_position'] = ApiClient.convertToType(data['starting_position'], 'Number');
            }
            if (data.hasOwnProperty('mid_race_position')) {
                obj['mid_race_position'] = ApiClient.convertToType(data['mid_race_position'], 'Number');
            }
            if (data.hasOwnProperty('closing_laps_position')) {
                obj['closing_laps_position'] = ApiClient.convertToType(data['closing_laps_position'], 'Number');
            }
            if (data.hasOwnProperty('closing_laps_diff')) {
                obj['closing_laps_diff'] = ApiClient.convertToType(data['closing_laps_diff'], 'Number');
            }
            if (data.hasOwnProperty('finishing_position')) {
                obj['finishing_position'] = ApiClient.convertToType(data['finishing_position'], 'Number');
            }
            if (data.hasOwnProperty('best_position')) {
                obj['best_position'] = ApiClient.convertToType(data['best_position'], 'Number');
            }
            if (data.hasOwnProperty('worst_position')) {
                obj['worst_position'] = ApiClient.convertToType(data['worst_position'], 'Number');
            }
            if (data.hasOwnProperty('passing_differential')) {
                obj['passing_differential'] = ApiClient.convertToType(data['passing_differential'], 'Number');
            }
            if (data.hasOwnProperty('green_flag_passes')) {
                obj['green_flag_passes'] = ApiClient.convertToType(data['green_flag_passes'], 'Number');
            }
            if (data.hasOwnProperty('green_flag_times_passed')) {
                obj['green_flag_times_passed'] = ApiClient.convertToType(data['green_flag_times_passed'], 'Number');
            }
            if (data.hasOwnProperty('quality_passes')) {
                obj['quality_passes'] = ApiClient.convertToType(data['quality_passes'], 'Number');
            }
            if (data.hasOwnProperty('average_running_position')) {
                obj['average_running_position'] = ApiClient.convertToType(data['average_running_position'], 'Number');
            }
            if (data.hasOwnProperty('percentage_quality_passes')) {
                obj['percentage_quality_passes'] = ApiClient.convertToType(data['percentage_quality_passes'], 'Number');
            }
            if (data.hasOwnProperty('fastest_lap')) {
                obj['fastest_lap'] = ApiClient.convertToType(data['fastest_lap'], 'Number');
            }
            if (data.hasOwnProperty('percentage_fastest_laps')) {
                obj['percentage_fastest_laps'] = ApiClient.convertToType(data['percentage_fastest_laps'], 'Number');
            }
            if (data.hasOwnProperty('laps_in_top15')) {
                obj['laps_in_top15'] = ApiClient.convertToType(data['laps_in_top15'], 'Number');
            }
            if (data.hasOwnProperty('percentage_laps_in_top15')) {
                obj['percentage_laps_in_top15'] = ApiClient.convertToType(data['percentage_laps_in_top15'], 'Number');
            }
            if (data.hasOwnProperty('laps_led')) {
                obj['laps_led'] = ApiClient.convertToType(data['laps_led'], 'Number');
            }
            if (data.hasOwnProperty('percentage_laps_led')) {
                obj['percentage_laps_led'] = ApiClient.convertToType(data['percentage_laps_led'], 'Number');
            }
            if (data.hasOwnProperty('laps_completed')) {
                obj['laps_completed'] = ApiClient.convertToType(data['laps_completed'], 'Number');
            }
            if (data.hasOwnProperty('fastest_on_restarts')) {
                obj['fastest_on_restarts'] = ApiClient.convertToType(data['fastest_on_restarts'], 'Number');
            }
            if (data.hasOwnProperty('average_speed_early_run')) {
                obj['average_speed_early_run'] = ApiClient.convertToType(data['average_speed_early_run'], 'Number');
            }
            if (data.hasOwnProperty('average_speed_late_run')) {
                obj['average_speed_late_run'] = ApiClient.convertToType(data['average_speed_late_run'], 'Number');
            }
            if (data.hasOwnProperty('average_green_flag_speed')) {
                obj['average_green_flag_speed'] = ApiClient.convertToType(data['average_green_flag_speed'], 'Number');
            }
            if (data.hasOwnProperty('average_speed_in_traffic')) {
                obj['average_speed_in_traffic'] = ApiClient.convertToType(data['average_speed_in_traffic'], 'Number');
            }
            if (data.hasOwnProperty('driver_rating')) {
                obj['driver_rating'] = ApiClient.convertToType(data['driver_rating'], 'Number');
            }
            if (data.hasOwnProperty('racesegment1_MPH_difference')) {
                obj['racesegment1_MPH_difference'] = ApiClient.convertToType(data['racesegment1_MPH_difference'], 'Number');
            }
            if (data.hasOwnProperty('racesegment2_MPH_difference')) {
                obj['racesegment2_MPH_difference'] = ApiClient.convertToType(data['racesegment2_MPH_difference'], 'Number');
            }
            if (data.hasOwnProperty('racesegment3_MPH_difference')) {
                obj['racesegment3_MPH_difference'] = ApiClient.convertToType(data['racesegment3_MPH_difference'], 'Number');
            }
            if (data.hasOwnProperty('racesegment4_MPH_difference')) {
                obj['racesegment4_MPH_difference'] = ApiClient.convertToType(data['racesegment4_MPH_difference'], 'Number');
            }
            if (data.hasOwnProperty('total_MPH_difference')) {
                obj['total_MPH_difference'] = ApiClient.convertToType(data['total_MPH_difference'], 'Number');
            }
            if (data.hasOwnProperty('took_lead')) {
                obj['took_lead'] = ApiClient.convertToType(data['took_lead'], 'Number');
            }
            if (data.hasOwnProperty('vehicle_number')) {
                obj['vehicle_number'] = ApiClient.convertToType(data['vehicle_number'], 'String');
            }
        }
        return obj;
    }

    /**
    * Starting position
    * @member {Number} starting_position
    */
    'starting_position' = undefined;
    /**
    * Mid race position
    * @member {Number} mid_race_position
    */
    'mid_race_position' = undefined;
    /**
    * Closing laps positions
    * @member {Number} closing_laps_position
    */
    'closing_laps_position' = undefined;
    /**
    * Closing laps differential
    * @member {Number} closing_laps_diff
    */
    'closing_laps_diff' = undefined;
    /**
    * Finishing position
    * @member {Number} finishing_position
    */
    'finishing_position' = undefined;
    /**
    * Best position
    * @member {Number} best_position
    */
    'best_position' = undefined;
    /**
    * Worst position
    * @member {Number} worst_position
    */
    'worst_position' = undefined;
    /**
    * Passing differential
    * @member {Number} passing_differential
    */
    'passing_differential' = undefined;
    /**
    * Green flag passes
    * @member {Number} green_flag_passes
    */
    'green_flag_passes' = undefined;
    /**
    * Green flag paused
    * @member {Number} green_flag_times_passed
    */
    'green_flag_times_passed' = undefined;
    /**
    * Quality passes
    * @member {Number} quality_passes
    */
    'quality_passes' = undefined;
    /**
    * Average running position
    * @member {Number} average_running_position
    */
    'average_running_position' = undefined;
    /**
    * Percentage quality passes
    * @member {Number} percentage_quality_passes
    */
    'percentage_quality_passes' = undefined;
    /**
    * Fastest lap
    * @member {Number} fastest_lap
    */
    'fastest_lap' = undefined;
    /**
    * Percentage fastest laps
    * @member {Number} percentage_fastest_laps
    */
    'percentage_fastest_laps' = undefined;
    /**
    * Laps in Top15
    * @member {Number} laps_in_top15
    */
    'laps_in_top15' = undefined;
    /**
    * Percentage laps in Top15
    * @member {Number} percentage_laps_in_top15
    */
    'percentage_laps_in_top15' = undefined;
    /**
    * Laps led
    * @member {Number} laps_led
    */
    'laps_led' = undefined;
    /**
    * Percentage laps led
    * @member {Number} percentage_laps_led
    */
    'percentage_laps_led' = undefined;
    /**
    * Laps completed
    * @member {Number} laps_completed
    */
    'laps_completed' = undefined;
    /**
    * Fastest on restarts
    * @member {Number} fastest_on_restarts
    */
    'fastest_on_restarts' = undefined;
    /**
    * Average speed early run
    * @member {Number} average_speed_early_run
    */
    'average_speed_early_run' = undefined;
    /**
    * Average speed late run
    * @member {Number} average_speed_late_run
    */
    'average_speed_late_run' = undefined;
    /**
    * Average green flag speed
    * @member {Number} average_green_flag_speed
    */
    'average_green_flag_speed' = undefined;
    /**
    * Average speed in traffic
    * @member {Number} average_speed_in_traffic
    */
    'average_speed_in_traffic' = undefined;
    /**
    * Driver rating
    * @member {Number} driver_rating
    */
    'driver_rating' = undefined;
    /**
    * Race segment 1 MPH difference
    * @member {Number} racesegment1_MPH_difference
    */
    'racesegment1_MPH_difference' = undefined;
    /**
    * Race segment 2 MPH difference
    * @member {Number} racesegment2_MPH_difference
    */
    'racesegment2_MPH_difference' = undefined;
    /**
    * Race segment 3 MPH difference
    * @member {Number} racesegment3_MPH_difference
    */
    'racesegment3_MPH_difference' = undefined;
    /**
    * Race segment 4 MPH difference
    * @member {Number} racesegment4_MPH_difference
    */
    'racesegment4_MPH_difference' = undefined;
    /**
    * Total MPH difference
    * @member {Number} total_MPH_difference
    */
    'total_MPH_difference' = undefined;
    /**
    * Took lead
    * @member {Number} took_lead
    */
    'took_lead' = undefined;
    /**
    * Vehicle number
    * @member {String} vehicle_number
    */
    'vehicle_number' = undefined;




}
