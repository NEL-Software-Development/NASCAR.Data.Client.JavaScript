/**
 * NASCAR.Data.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient.js';

/**
* The OSSScan model module.
* @module model/OSSScan
* @version 1.0
*/
export default class OSSScan {
    /**
    * Constructs a new <code>OSSScan</code>.
    * @alias module:model/OSSScan
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>OSSScan</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/OSSScan} obj Optional instance to populate.
    * @return {module:model/OSSScan} The populated <code>OSSScan</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OSSScan();
                        
            
            if (data.hasOwnProperty('vehicle_number')) {
                obj['vehicle_number'] = ApiClient.convertToType(data['vehicle_number'], 'String');
            }
            if (data.hasOwnProperty('chassis')) {
                obj['chassis'] = ApiClient.convertToType(data['chassis'], 'String');
            }
            if (data.hasOwnProperty('limits_bodyoffset_min')) {
                obj['limits_bodyoffset_min'] = ApiClient.convertToType(data['limits_bodyoffset_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_bodyoffset_max')) {
                obj['limits_bodyoffset_max'] = ApiClient.convertToType(data['limits_bodyoffset_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_bodyoffset')) {
                obj['passfails_bodyoffset'] = ApiClient.convertToType(data['passfails_bodyoffset'], 'Boolean');
            }
            if (data.hasOwnProperty('results_bodyoffset')) {
                obj['results_bodyoffset'] = ApiClient.convertToType(data['results_bodyoffset'], 'Number');
            }
            if (data.hasOwnProperty('limits_camber_lf_min')) {
                obj['limits_camber_lf_min'] = ApiClient.convertToType(data['limits_camber_lf_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_camber_lf_max')) {
                obj['limits_camber_lf_max'] = ApiClient.convertToType(data['limits_camber_lf_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_camber_lf')) {
                obj['passfails_camber_lf'] = ApiClient.convertToType(data['passfails_camber_lf'], 'Boolean');
            }
            if (data.hasOwnProperty('results_camber_lf')) {
                obj['results_camber_lf'] = ApiClient.convertToType(data['results_camber_lf'], 'Number');
            }
            if (data.hasOwnProperty('limits_camber_lr_min')) {
                obj['limits_camber_lr_min'] = ApiClient.convertToType(data['limits_camber_lr_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_camber_lr_max')) {
                obj['limits_camber_lr_max'] = ApiClient.convertToType(data['limits_camber_lr_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_camber_lr')) {
                obj['passfails_camber_lr'] = ApiClient.convertToType(data['passfails_camber_lr'], 'Boolean');
            }
            if (data.hasOwnProperty('results_camber_lr')) {
                obj['results_camber_lr'] = ApiClient.convertToType(data['results_camber_lr'], 'Number');
            }
            if (data.hasOwnProperty('limits_camber_rf_min')) {
                obj['limits_camber_rf_min'] = ApiClient.convertToType(data['limits_camber_rf_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_camber_rf_max')) {
                obj['limits_camber_rf_max'] = ApiClient.convertToType(data['limits_camber_rf_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_camber_rf')) {
                obj['passfails_camber_rf'] = ApiClient.convertToType(data['passfails_camber_rf'], 'Boolean');
            }
            if (data.hasOwnProperty('results_camber_rf')) {
                obj['results_camber_rf'] = ApiClient.convertToType(data['results_camber_rf'], 'Number');
            }
            if (data.hasOwnProperty('limits_camber_rr_min')) {
                obj['limits_camber_rr_min'] = ApiClient.convertToType(data['limits_camber_rr_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_camber_rr_max')) {
                obj['limits_camber_rr_max'] = ApiClient.convertToType(data['limits_camber_rr_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_camber_rr')) {
                obj['passfails_camber_rr'] = ApiClient.convertToType(data['passfails_camber_rr'], 'Boolean');
            }
            if (data.hasOwnProperty('results_camber_rr')) {
                obj['results_camber_rr'] = ApiClient.convertToType(data['results_camber_rr'], 'Number');
            }
            if (data.hasOwnProperty('limits_lf_framerail_min')) {
                obj['limits_lf_framerail_min'] = ApiClient.convertToType(data['limits_lf_framerail_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_lf_framerail_max')) {
                obj['limits_lf_framerail_max'] = ApiClient.convertToType(data['limits_lf_framerail_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_lf_framerail')) {
                obj['passfails_lf_framerail'] = ApiClient.convertToType(data['passfails_lf_framerail'], 'Boolean');
            }
            if (data.hasOwnProperty('results_lf_framerail')) {
                obj['results_lf_framerail'] = ApiClient.convertToType(data['results_lf_framerail'], 'Number');
            }
            if (data.hasOwnProperty('limits_lr_framerail_min')) {
                obj['limits_lr_framerail_min'] = ApiClient.convertToType(data['limits_lr_framerail_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_lr_framerail_max')) {
                obj['limits_lr_framerail_max'] = ApiClient.convertToType(data['limits_lr_framerail_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_lr_framerail')) {
                obj['passfails_lr_framerail'] = ApiClient.convertToType(data['passfails_lr_framerail'], 'Boolean');
            }
            if (data.hasOwnProperty('results_lr_framerail')) {
                obj['results_lr_framerail'] = ApiClient.convertToType(data['results_lr_framerail'], 'Number');
            }
            if (data.hasOwnProperty('limits_rf_framerail_min')) {
                obj['limits_rf_framerail_min'] = ApiClient.convertToType(data['limits_rf_framerail_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_rf_framerail_max')) {
                obj['limits_rf_framerail_max'] = ApiClient.convertToType(data['limits_rf_framerail_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_rf_framerail')) {
                obj['passfails_rf_framerail'] = ApiClient.convertToType(data['passfails_rf_framerail'], 'Boolean');
            }
            if (data.hasOwnProperty('results_rf_framerail')) {
                obj['results_rf_framerail'] = ApiClient.convertToType(data['results_rf_framerail'], 'Number');
            }
            if (data.hasOwnProperty('limits_rh_location_left_min')) {
                obj['limits_rh_location_left_min'] = ApiClient.convertToType(data['limits_rh_location_left_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_rh_location_left_max')) {
                obj['limits_rh_location_left_max'] = ApiClient.convertToType(data['limits_rh_location_left_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_rh_location_left')) {
                obj['passfails_rh_location_left'] = ApiClient.convertToType(data['passfails_rh_location_left'], 'Boolean');
            }
            if (data.hasOwnProperty('results_rh_location_left')) {
                obj['results_rh_location_left'] = ApiClient.convertToType(data['results_rh_location_left'], 'Number');
            }
            if (data.hasOwnProperty('limits_rh_location_right_min')) {
                obj['limits_rh_location_right_min'] = ApiClient.convertToType(data['limits_rh_location_right_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_rh_location_right_max')) {
                obj['limits_rh_location_right_max'] = ApiClient.convertToType(data['limits_rh_location_right_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_rh_location_right')) {
                obj['passfails_rh_location_right'] = ApiClient.convertToType(data['passfails_rh_location_right'], 'Boolean');
            }
            if (data.hasOwnProperty('results_rh_location_right')) {
                obj['results_rh_location_right'] = ApiClient.convertToType(data['results_rh_location_right'], 'Number');
            }
            if (data.hasOwnProperty('limits_rh_skew_min')) {
                obj['limits_rh_skew_min'] = ApiClient.convertToType(data['limits_rh_skew_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_rh_skew_max')) {
                obj['limits_rh_skew_max'] = ApiClient.convertToType(data['limits_rh_skew_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_rh_skew')) {
                obj['passfails_rh_skew'] = ApiClient.convertToType(data['passfails_rh_skew'], 'Boolean');
            }
            if (data.hasOwnProperty('results_rh_skew')) {
                obj['results_rh_skew'] = ApiClient.convertToType(data['results_rh_skew'], 'Number');
            }
            if (data.hasOwnProperty('limits_rr_framerail_min')) {
                obj['limits_rr_framerail_min'] = ApiClient.convertToType(data['limits_rr_framerail_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_rr_framerail_max')) {
                obj['limits_rr_framerail_max'] = ApiClient.convertToType(data['limits_rr_framerail_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_rr_framerail')) {
                obj['passfails_rr_framerail'] = ApiClient.convertToType(data['passfails_rr_framerail'], 'Boolean');
            }
            if (data.hasOwnProperty('results_rr_framerail')) {
                obj['results_rr_framerail'] = ApiClient.convertToType(data['results_rr_framerail'], 'Number');
            }
            if (data.hasOwnProperty('limits_right_parallel_min')) {
                obj['limits_right_parallel_min'] = ApiClient.convertToType(data['limits_right_parallel_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_right_parallel_max')) {
                obj['limits_right_parallel_max'] = ApiClient.convertToType(data['limits_right_parallel_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_right_parallel')) {
                obj['passfails_right_parallel'] = ApiClient.convertToType(data['passfails_right_parallel'], 'Boolean');
            }
            if (data.hasOwnProperty('results_right_parallel')) {
                obj['results_right_parallel'] = ApiClient.convertToType(data['results_right_parallel'], 'Number');
            }
            if (data.hasOwnProperty('limits_treadwidth_front_min')) {
                obj['limits_treadwidth_front_min'] = ApiClient.convertToType(data['limits_treadwidth_front_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_treadwidth_front_max')) {
                obj['limits_treadwidth_front_max'] = ApiClient.convertToType(data['limits_treadwidth_front_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_treadwidth_front')) {
                obj['passfails_treadwidth_front'] = ApiClient.convertToType(data['passfails_treadwidth_front'], 'Boolean');
            }
            if (data.hasOwnProperty('results_treadwidth_front')) {
                obj['results_treadwidth_front'] = ApiClient.convertToType(data['results_treadwidth_front'], 'Number');
            }
            if (data.hasOwnProperty('limits_treadwidth_rear_min')) {
                obj['limits_treadwidth_rear_min'] = ApiClient.convertToType(data['limits_treadwidth_rear_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_treadwidth_rear_max')) {
                obj['limits_treadwidth_rear_max'] = ApiClient.convertToType(data['limits_treadwidth_rear_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_treadwidth_rear')) {
                obj['passfails_treadwidth_rear'] = ApiClient.convertToType(data['passfails_treadwidth_rear'], 'Boolean');
            }
            if (data.hasOwnProperty('results_treadwidth_rear')) {
                obj['results_treadwidth_rear'] = ApiClient.convertToType(data['results_treadwidth_rear'], 'Number');
            }
            if (data.hasOwnProperty('limits_wheelbase_left_min')) {
                obj['limits_wheelbase_left_min'] = ApiClient.convertToType(data['limits_wheelbase_left_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_wheelbase_left_max')) {
                obj['limits_wheelbase_left_max'] = ApiClient.convertToType(data['limits_wheelbase_left_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_wheelbase_left')) {
                obj['passfails_wheelbase_left'] = ApiClient.convertToType(data['passfails_wheelbase_left'], 'Boolean');
            }
            if (data.hasOwnProperty('results_wheelbase_left')) {
                obj['results_wheelbase_left'] = ApiClient.convertToType(data['results_wheelbase_left'], 'Number');
            }
            if (data.hasOwnProperty('limits_wheelbase_right_min')) {
                obj['limits_wheelbase_right_min'] = ApiClient.convertToType(data['limits_wheelbase_right_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_wheelbase_right_max')) {
                obj['limits_wheelbase_right_max'] = ApiClient.convertToType(data['limits_wheelbase_right_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_wheelbase_right')) {
                obj['passfails_wheelbase_right'] = ApiClient.convertToType(data['passfails_wheelbase_right'], 'Boolean');
            }
            if (data.hasOwnProperty('results_wheelbase_right')) {
                obj['results_wheelbase_right'] = ApiClient.convertToType(data['results_wheelbase_right'], 'Number');
            }
            if (data.hasOwnProperty('limits_toe_lr_min')) {
                obj['limits_toe_lr_min'] = ApiClient.convertToType(data['limits_toe_lr_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_toe_lr_max')) {
                obj['limits_toe_lr_max'] = ApiClient.convertToType(data['limits_toe_lr_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_toe_lr')) {
                obj['passfails_toe_lr'] = ApiClient.convertToType(data['passfails_toe_lr'], 'Boolean');
            }
            if (data.hasOwnProperty('results_toe_lr')) {
                obj['results_toe_lr'] = ApiClient.convertToType(data['results_toe_lr'], 'Number');
            }
            if (data.hasOwnProperty('limits_toe_rr_min')) {
                obj['limits_toe_rr_min'] = ApiClient.convertToType(data['limits_toe_rr_min'], 'Number');
            }
            if (data.hasOwnProperty('limits_toe_rr_max')) {
                obj['limits_toe_rr_max'] = ApiClient.convertToType(data['limits_toe_rr_max'], 'Number');
            }
            if (data.hasOwnProperty('passfails_toe_rr')) {
                obj['passfails_toe_rr'] = ApiClient.convertToType(data['passfails_toe_rr'], 'Boolean');
            }
            if (data.hasOwnProperty('results_toe_rr')) {
                obj['results_toe_rr'] = ApiClient.convertToType(data['results_toe_rr'], 'Number');
            }
            if (data.hasOwnProperty('inspection_date')) {
                obj['inspection_date'] = ApiClient.convertToType(data['inspection_date'], 'Date');
            }
        }
        return obj;
    }

    /**
    * Vehicle number
    * @member {String} vehicle_number
    */
    'vehicle_number' = undefined;
    /**
    * Chassis
    * @member {String} chassis
    */
    'chassis' = undefined;
    /**
    * Body offset minimum
    * @member {Number} limits_bodyoffset_min
    */
    'limits_bodyoffset_min' = undefined;
    /**
    * Body offset maximum
    * @member {Number} limits_bodyoffset_max
    */
    'limits_bodyoffset_max' = undefined;
    /**
    * Body offset pass/fails
    * @member {Boolean} passfails_bodyoffset
    */
    'passfails_bodyoffset' = undefined;
    /**
    * Results body offset
    * @member {Number} results_bodyoffset
    */
    'results_bodyoffset' = undefined;
    /**
    * Left front camber minimum
    * @member {Number} limits_camber_lf_min
    */
    'limits_camber_lf_min' = undefined;
    /**
    * Left front camber maximum
    * @member {Number} limits_camber_lf_max
    */
    'limits_camber_lf_max' = undefined;
    /**
    * Left front camber pass/fails
    * @member {Boolean} passfails_camber_lf
    */
    'passfails_camber_lf' = undefined;
    /**
    * Left front camber results
    * @member {Number} results_camber_lf
    */
    'results_camber_lf' = undefined;
    /**
    * Left rear camber minimum
    * @member {Number} limits_camber_lr_min
    */
    'limits_camber_lr_min' = undefined;
    /**
    * Left rear camber maximum
    * @member {Number} limits_camber_lr_max
    */
    'limits_camber_lr_max' = undefined;
    /**
    * Left rear camber pass/fails
    * @member {Boolean} passfails_camber_lr
    */
    'passfails_camber_lr' = undefined;
    /**
    * Left rear camber results
    * @member {Number} results_camber_lr
    */
    'results_camber_lr' = undefined;
    /**
    * Right front camber minimum
    * @member {Number} limits_camber_rf_min
    */
    'limits_camber_rf_min' = undefined;
    /**
    * Right front camber maximum
    * @member {Number} limits_camber_rf_max
    */
    'limits_camber_rf_max' = undefined;
    /**
    * Right front camber pass/fails
    * @member {Boolean} passfails_camber_rf
    */
    'passfails_camber_rf' = undefined;
    /**
    * Right front camber results
    * @member {Number} results_camber_rf
    */
    'results_camber_rf' = undefined;
    /**
    * Right rear camber minimum
    * @member {Number} limits_camber_rr_min
    */
    'limits_camber_rr_min' = undefined;
    /**
    * Right rear camber maximum
    * @member {Number} limits_camber_rr_max
    */
    'limits_camber_rr_max' = undefined;
    /**
    * Right rear camber pass/fails
    * @member {Boolean} passfails_camber_rr
    */
    'passfails_camber_rr' = undefined;
    /**
    * Right rear camber results
    * @member {Number} results_camber_rr
    */
    'results_camber_rr' = undefined;
    /**
    * Left front framerail minimum
    * @member {Number} limits_lf_framerail_min
    */
    'limits_lf_framerail_min' = undefined;
    /**
    * Left front framework maximum
    * @member {Number} limits_lf_framerail_max
    */
    'limits_lf_framerail_max' = undefined;
    /**
    * Left front framerail pass/fails
    * @member {Boolean} passfails_lf_framerail
    */
    'passfails_lf_framerail' = undefined;
    /**
    * Left front framework results
    * @member {Number} results_lf_framerail
    */
    'results_lf_framerail' = undefined;
    /**
    * Left rear framerail minimum
    * @member {Number} limits_lr_framerail_min
    */
    'limits_lr_framerail_min' = undefined;
    /**
    * Left rear framerail maximum
    * @member {Number} limits_lr_framerail_max
    */
    'limits_lr_framerail_max' = undefined;
    /**
    * Left rear framerail pass/fails
    * @member {Boolean} passfails_lr_framerail
    */
    'passfails_lr_framerail' = undefined;
    /**
    * Left rear framerail results
    * @member {Number} results_lr_framerail
    */
    'results_lr_framerail' = undefined;
    /**
    * Right front framerail minimum
    * @member {Number} limits_rf_framerail_min
    */
    'limits_rf_framerail_min' = undefined;
    /**
    * Right front framerail maximum
    * @member {Number} limits_rf_framerail_max
    */
    'limits_rf_framerail_max' = undefined;
    /**
    * Right front framerail pass/fails
    * @member {Boolean} passfails_rf_framerail
    */
    'passfails_rf_framerail' = undefined;
    /**
    * Right front framerail results
    * @member {Number} results_rf_framerail
    */
    'results_rf_framerail' = undefined;
    /**
    * Right hand left minimum
    * @member {Number} limits_rh_location_left_min
    */
    'limits_rh_location_left_min' = undefined;
    /**
    * Right hand left maximum
    * @member {Number} limits_rh_location_left_max
    */
    'limits_rh_location_left_max' = undefined;
    /**
    * Right hand left pass/fails
    * @member {Boolean} passfails_rh_location_left
    */
    'passfails_rh_location_left' = undefined;
    /**
    * Right hand left results
    * @member {Number} results_rh_location_left
    */
    'results_rh_location_left' = undefined;
    /**
    * Right hand right min
    * @member {Number} limits_rh_location_right_min
    */
    'limits_rh_location_right_min' = undefined;
    /**
    * Right hand right max
    * @member {Number} limits_rh_location_right_max
    */
    'limits_rh_location_right_max' = undefined;
    /**
    * Right hand right pass/fails
    * @member {Boolean} passfails_rh_location_right
    */
    'passfails_rh_location_right' = undefined;
    /**
    * Right hand right results
    * @member {Number} results_rh_location_right
    */
    'results_rh_location_right' = undefined;
    /**
    * Right right skew minimum
    * @member {Number} limits_rh_skew_min
    */
    'limits_rh_skew_min' = undefined;
    /**
    * Right hand skew maximum
    * @member {Number} limits_rh_skew_max
    */
    'limits_rh_skew_max' = undefined;
    /**
    * Right hand skew pass/fails
    * @member {Boolean} passfails_rh_skew
    */
    'passfails_rh_skew' = undefined;
    /**
    * Right hand skew results
    * @member {Number} results_rh_skew
    */
    'results_rh_skew' = undefined;
    /**
    * Right rear framerail minimum
    * @member {Number} limits_rr_framerail_min
    */
    'limits_rr_framerail_min' = undefined;
    /**
    * Right rear framerail maximum
    * @member {Number} limits_rr_framerail_max
    */
    'limits_rr_framerail_max' = undefined;
    /**
    * Right rear framerail pass/fails
    * @member {Boolean} passfails_rr_framerail
    */
    'passfails_rr_framerail' = undefined;
    /**
    * Right rear framerail results
    * @member {Number} results_rr_framerail
    */
    'results_rr_framerail' = undefined;
    /**
    * Right parallel minimum
    * @member {Number} limits_right_parallel_min
    */
    'limits_right_parallel_min' = undefined;
    /**
    * Right parallel maximum
    * @member {Number} limits_right_parallel_max
    */
    'limits_right_parallel_max' = undefined;
    /**
    * Right parallel pass/fails
    * @member {Boolean} passfails_right_parallel
    */
    'passfails_right_parallel' = undefined;
    /**
    * Right parallel results
    * @member {Number} results_right_parallel
    */
    'results_right_parallel' = undefined;
    /**
    * Front treadwidth minimum
    * @member {Number} limits_treadwidth_front_min
    */
    'limits_treadwidth_front_min' = undefined;
    /**
    * Front treadwidth maximum
    * @member {Number} limits_treadwidth_front_max
    */
    'limits_treadwidth_front_max' = undefined;
    /**
    * Front treadwidth pass/fails
    * @member {Boolean} passfails_treadwidth_front
    */
    'passfails_treadwidth_front' = undefined;
    /**
    * Front treadwidth results
    * @member {Number} results_treadwidth_front
    */
    'results_treadwidth_front' = undefined;
    /**
    * Rear treadwidth minimum
    * @member {Number} limits_treadwidth_rear_min
    */
    'limits_treadwidth_rear_min' = undefined;
    /**
    * Rear treadwidth maximum
    * @member {Number} limits_treadwidth_rear_max
    */
    'limits_treadwidth_rear_max' = undefined;
    /**
    * Rear treadwidth pass/fails
    * @member {Boolean} passfails_treadwidth_rear
    */
    'passfails_treadwidth_rear' = undefined;
    /**
    * Rear treadwidth results
    * @member {Number} results_treadwidth_rear
    */
    'results_treadwidth_rear' = undefined;
    /**
    * Left wheelbase minimum
    * @member {Number} limits_wheelbase_left_min
    */
    'limits_wheelbase_left_min' = undefined;
    /**
    * Left wheelbase maximum
    * @member {Number} limits_wheelbase_left_max
    */
    'limits_wheelbase_left_max' = undefined;
    /**
    * Left wheelbase pass/fails
    * @member {Boolean} passfails_wheelbase_left
    */
    'passfails_wheelbase_left' = undefined;
    /**
    * Left wheelbase results
    * @member {Number} results_wheelbase_left
    */
    'results_wheelbase_left' = undefined;
    /**
    * Right wheelbase minimum
    * @member {Number} limits_wheelbase_right_min
    */
    'limits_wheelbase_right_min' = undefined;
    /**
    * Right wheelbase maximum
    * @member {Number} limits_wheelbase_right_max
    */
    'limits_wheelbase_right_max' = undefined;
    /**
    * Right wheelbase pass/fails
    * @member {Boolean} passfails_wheelbase_right
    */
    'passfails_wheelbase_right' = undefined;
    /**
    * Right wheelbase results
    * @member {Number} results_wheelbase_right
    */
    'results_wheelbase_right' = undefined;
    /**
    * Left rear toe minimum
    * @member {Number} limits_toe_lr_min
    */
    'limits_toe_lr_min' = undefined;
    /**
    * Left rear toe maximum
    * @member {Number} limits_toe_lr_max
    */
    'limits_toe_lr_max' = undefined;
    /**
    * Left rear toe pass/fails
    * @member {Boolean} passfails_toe_lr
    */
    'passfails_toe_lr' = undefined;
    /**
    * Left rear toe results
    * @member {Number} results_toe_lr
    */
    'results_toe_lr' = undefined;
    /**
    * Right rear toe minimum
    * @member {Number} limits_toe_rr_min
    */
    'limits_toe_rr_min' = undefined;
    /**
    * Right rear toe maximum
    * @member {Number} limits_toe_rr_max
    */
    'limits_toe_rr_max' = undefined;
    /**
    * Right rear pass/fails
    * @member {Boolean} passfails_toe_rr
    */
    'passfails_toe_rr' = undefined;
    /**
    * Right rear toe results
    * @member {Number} results_toe_rr
    */
    'results_toe_rr' = undefined;
    /**
    * Inspection date
    * @member {Date} inspection_date
    */
    'inspection_date' = undefined;




}
