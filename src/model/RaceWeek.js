/**
 * NASCAR.Data.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The RaceWeek model module.
* @module model/RaceWeek
* @version 1.0
*/
export default class RaceWeek {
    /**
    * Constructs a new <code>RaceWeek</code>.
    * @alias module:model/RaceWeek
    * @class
    * @param season {Number} Race season
    * @param venue {String} Venue
    * @param runningSeries {String} List of series running at this event
    */

    constructor(season, venue, runningSeries) {
        
        
        this['season'] = season;
        this['venue'] = venue;
        this['running_series'] = runningSeries;
        
    }

    /**
    * Constructs a <code>RaceWeek</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/RaceWeek} obj Optional instance to populate.
    * @return {module:model/RaceWeek} The populated <code>RaceWeek</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RaceWeek();
                        
            
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('season')) {
                obj['season'] = ApiClient.convertToType(data['season'], 'Number');
            }
            if (data.hasOwnProperty('venue')) {
                obj['venue'] = ApiClient.convertToType(data['venue'], 'String');
            }
            if (data.hasOwnProperty('running_series')) {
                obj['running_series'] = ApiClient.convertToType(data['running_series'], 'String');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
            }
            if (data.hasOwnProperty('is_live')) {
                obj['is_live'] = ApiClient.convertToType(data['is_live'], 'Boolean');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], 'String');
            }
        }
        return obj;
    }

    /**
    * Id
    * @member {Number} id
    */
    'id' = undefined;
    /**
    * Race season
    * @member {Number} season
    * @default 0
    */
    'season' = 0;
    /**
    * Venue
    * @member {String} venue
    * @default ''
    */
    'venue' = '';
    /**
    * List of series running at this event
    * @member {String} running_series
    * @default ''
    */
    'running_series' = '';
    /**
    * Start of raceweek
    * @member {Date} start_date
    */
    'start_date' = undefined;
    /**
    * End of raceweek
    * @member {Date} end_date
    */
    'end_date' = undefined;
    /**
    * Is this raceweek currently in progress
    * @member {Boolean} is_live
    */
    'is_live' = undefined;
    /**
    * URL to raceweek details
    * @member {String} details
    */
    'details' = undefined;




}
