/**
 * NASCAR.Data.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient.js';

/**
* The DriverPoint model module.
* @module model/DriverPoint
* @version 1.0
*/
export default class DriverPoint {
    /**
    * Constructs a new <code>DriverPoint</code>.
    * @alias module:model/DriverPoint
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>DriverPoint</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/DriverPoint} obj Optional instance to populate.
    * @return {module:model/DriverPoint} The populated <code>DriverPoint</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DriverPoint();
                        
            
            if (data.hasOwnProperty('driver')) {
                obj['driver'] = ApiClient.convertToType(data['driver'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('points')) {
                obj['points'] = ApiClient.convertToType(data['points'], 'Number');
            }
            if (data.hasOwnProperty('playoff_points')) {
                obj['playoff_points'] = ApiClient.convertToType(data['playoff_points'], 'Number');
            }
            if (data.hasOwnProperty('playoff_rank')) {
                obj['playoff_rank'] = ApiClient.convertToType(data['playoff_rank'], 'Number');
            }
            if (data.hasOwnProperty('delta_leader')) {
                obj['delta_leader'] = ApiClient.convertToType(data['delta_leader'], 'Number');
            }
            if (data.hasOwnProperty('delta_next')) {
                obj['delta_next'] = ApiClient.convertToType(data['delta_next'], 'Number');
            }
            if (data.hasOwnProperty('delta_playoff')) {
                obj['delta_playoff'] = ApiClient.convertToType(data['delta_playoff'], 'Number');
            }
            if (data.hasOwnProperty('projected_playoff_points')) {
                obj['projected_playoff_points'] = ApiClient.convertToType(data['projected_playoff_points'], 'Number');
            }
            if (data.hasOwnProperty('starts')) {
                obj['starts'] = ApiClient.convertToType(data['starts'], 'Number');
            }
            if (data.hasOwnProperty('poles')) {
                obj['poles'] = ApiClient.convertToType(data['poles'], 'Number');
            }
            if (data.hasOwnProperty('wins')) {
                obj['wins'] = ApiClient.convertToType(data['wins'], 'Number');
            }
            if (data.hasOwnProperty('stage_1_wins')) {
                obj['stage_1_wins'] = ApiClient.convertToType(data['stage_1_wins'], 'Number');
            }
            if (data.hasOwnProperty('stage_2_wins')) {
                obj['stage_2_wins'] = ApiClient.convertToType(data['stage_2_wins'], 'Number');
            }
            if (data.hasOwnProperty('stage_3_wins')) {
                obj['stage_3_wins'] = ApiClient.convertToType(data['stage_3_wins'], 'Number');
            }
            if (data.hasOwnProperty('stage_points')) {
                obj['stage_points'] = ApiClient.convertToType(data['stage_points'], 'Number');
            }
            if (data.hasOwnProperty('playoff_race_wins')) {
                obj['playoff_race_wins'] = ApiClient.convertToType(data['playoff_race_wins'], 'Number');
            }
            if (data.hasOwnProperty('playoff_stage_wins')) {
                obj['playoff_stage_wins'] = ApiClient.convertToType(data['playoff_stage_wins'], 'Number');
            }
            if (data.hasOwnProperty('points_earned_this_race')) {
                obj['points_earned_this_race'] = ApiClient.convertToType(data['points_earned_this_race'], 'Number');
            }
            if (data.hasOwnProperty('playoff_points_earned_this_race')) {
                obj['playoff_points_earned_this_race'] = ApiClient.convertToType(data['playoff_points_earned_this_race'], 'Number');
            }
            if (data.hasOwnProperty('stage_points_earned_this_race')) {
                obj['stage_points_earned_this_race'] = ApiClient.convertToType(data['stage_points_earned_this_race'], 'Number');
            }
            if (data.hasOwnProperty('top5')) {
                obj['top5'] = ApiClient.convertToType(data['top5'], 'Number');
            }
            if (data.hasOwnProperty('top10')) {
                obj['top10'] = ApiClient.convertToType(data['top10'], 'Number');
            }
            if (data.hasOwnProperty('laps_led')) {
                obj['laps_led'] = ApiClient.convertToType(data['laps_led'], 'Number');
            }
            if (data.hasOwnProperty('dnf')) {
                obj['dnf'] = ApiClient.convertToType(data['dnf'], 'Number');
            }
            if (data.hasOwnProperty('is_clinch')) {
                obj['is_clinch'] = ApiClient.convertToType(data['is_clinch'], 'Boolean');
            }
            if (data.hasOwnProperty('made_playoffs')) {
                obj['made_playoffs'] = ApiClient.convertToType(data['made_playoffs'], 'Boolean');
            }
            if (data.hasOwnProperty('in_playoffs')) {
                obj['in_playoffs'] = ApiClient.convertToType(data['in_playoffs'], 'Boolean');
            }
            if (data.hasOwnProperty('highest_round')) {
                obj['highest_round'] = ApiClient.convertToType(data['highest_round'], 'Number');
            }
        }
        return obj;
    }

    /**
    * Driver name
    * @member {String} driver
    */
    'driver' = undefined;
    /**
    * Points position
    * @member {Number} position
    */
    'position' = undefined;
    /**
    * Total points earned
    * @member {Number} points
    */
    'points' = undefined;
    /**
    * Total playoff points earned
    * @member {Number} playoff_points
    */
    'playoff_points' = undefined;
    /**
    * Playoff Ranking
    * @member {Number} playoff_rank
    */
    'playoff_rank' = undefined;
    /**
    * Positions behind leader
    * @member {Number} delta_leader
    */
    'delta_leader' = undefined;
    /**
    * Positions behind next
    * @member {Number} delta_next
    */
    'delta_next' = undefined;
    /**
    * Points out of the playoffs
    * @member {Number} delta_playoff
    */
    'delta_playoff' = undefined;
    /**
    * The projected number of playoff points
    * @member {Number} projected_playoff_points
    */
    'projected_playoff_points' = undefined;
    /**
    * The number of starts this season
    * @member {Number} starts
    */
    'starts' = undefined;
    /**
    * The number of times the driver earned the pole position this season
    * @member {Number} poles
    */
    'poles' = undefined;
    /**
    * The number of race wins this season
    * @member {Number} wins
    */
    'wins' = undefined;
    /**
    * The number of stage 1 wins this season
    * @member {Number} stage_1_wins
    */
    'stage_1_wins' = undefined;
    /**
    * The number of stage 2 wins this season
    * @member {Number} stage_2_wins
    */
    'stage_2_wins' = undefined;
    /**
    * The number of stage 3 wins this season
    * @member {Number} stage_3_wins
    */
    'stage_3_wins' = undefined;
    /**
    * The number of stage points earned this season
    * @member {Number} stage_points
    */
    'stage_points' = undefined;
    /**
    * The number of playoff race wins this season
    * @member {Number} playoff_race_wins
    */
    'playoff_race_wins' = undefined;
    /**
    * The number of playoff stage wins this season
    * @member {Number} playoff_stage_wins
    */
    'playoff_stage_wins' = undefined;
    /**
    * The number of points earned this race
    * @member {Number} points_earned_this_race
    */
    'points_earned_this_race' = undefined;
    /**
    * The number of playoff points earned this race
    * @member {Number} playoff_points_earned_this_race
    */
    'playoff_points_earned_this_race' = undefined;
    /**
    * The number of stage points earned this race
    * @member {Number} stage_points_earned_this_race
    */
    'stage_points_earned_this_race' = undefined;
    /**
    * The number of top 5 finishes this season
    * @member {Number} top5
    */
    'top5' = undefined;
    /**
    * The number of top 10 finishes this season
    * @member {Number} top10
    */
    'top10' = undefined;
    /**
    * The number of laps led this season
    * @member {Number} laps_led
    */
    'laps_led' = undefined;
    /**
    * The number of races where the driver did not finish
    * @member {Number} dnf
    */
    'dnf' = undefined;
    /**
    * Whether or not the driver has clinched a playoff position
    * @member {Boolean} is_clinch
    */
    'is_clinch' = undefined;
    /**
    * Whether or not the driver made the playoffs
    * @member {Boolean} made_playoffs
    */
    'made_playoffs' = undefined;
    /**
    * Whether or not the driver is still in the playoffs
    * @member {Boolean} in_playoffs
    */
    'in_playoffs' = undefined;
    /**
    * The highest playoff round acheived this season
    * @member {Number} highest_round
    */
    'highest_round' = undefined;




}
